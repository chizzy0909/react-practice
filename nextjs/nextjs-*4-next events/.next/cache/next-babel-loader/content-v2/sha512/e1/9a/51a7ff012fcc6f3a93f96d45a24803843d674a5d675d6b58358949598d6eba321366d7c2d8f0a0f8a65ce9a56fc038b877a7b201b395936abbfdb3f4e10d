{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chenghongzhen/react-practice/nextjs/nextjs-*4-work with firebase/pages/events/[eventId].js\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\"; // import { useRouter } from \"next/router\";\n// import { getEventById } from \"../../dummy-data\";\n\nimport { getFeaturedEvents, getEventById } from \"../../helpers/api-utils\";\nimport EventSummary from \"../../components/event-detail/event-summary\";\nimport EventLogistics from \"../../components/event-detail/event-logistics\";\nimport EventContent from \"../../components/event-detail/event-content\";\nimport ErrorAlert from \"../../components/ui/error-alert\";\nimport Comments from \"../../components/input/comments\";\n\nfunction EventDetailPage(props) {\n  // const router = useRouter();\n  // const eventId = router.query.eventId;\n  // const event = getEventById(eventId);\n  const event = props.selectedEvent;\n\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No event found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      eventId: event.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps(context) {\n  const eventId = context.params.eventId;\n  const event = await getEventById(eventId);\n  return {\n    props: {\n      selectedEvent: event\n    },\n    revalidate: 30\n  };\n}\nexport async function getStaticPaths() {\n  const events = await getFeaturedEvents();\n  const paths = events.map(event => ({\n    params: {\n      eventId: event.id\n    }\n  }));\n  return {\n    paths: paths,\n    fallback: true\n  };\n}\nexport default EventDetailPage;","map":{"version":3,"sources":["/Users/chenghongzhen/react-practice/nextjs/nextjs-*4-work with firebase/pages/events/[eventId].js"],"names":["Head","Fragment","getFeaturedEvents","getEventById","EventSummary","EventLogistics","EventContent","ErrorAlert","Comments","EventDetailPage","props","event","selectedEvent","title","description","date","location","image","id","getStaticProps","context","eventId","params","revalidate","getStaticPaths","events","paths","map","fallback"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;AAEA;;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,yBAAhD;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B;AACA;AACA;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACE,aAApB;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,wBACE,QAAC,UAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACG;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEH,KAAK,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,cAAD;AACE,MAAA,IAAI,EAAEF,KAAK,CAACI,IADd;AAEE,MAAA,OAAO,EAAEJ,KAAK,CAACK,QAFjB;AAGE,MAAA,KAAK,EAAEL,KAAK,CAACM,KAHf;AAIE,MAAA,QAAQ,EAAEN,KAAK,CAACE;AAJlB;AAAA;AAAA;AAAA;AAAA,YANF,eAYE,QAAC,YAAD;AAAA,6BACE;AAAA,kBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEH,KAAK,CAACO;AAAzB;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,OAAO,GAAGD,OAAO,CAACE,MAAR,CAAeD,OAA/B;AACA,QAAMV,KAAK,GAAG,MAAMR,YAAY,CAACkB,OAAD,CAAhC;AACA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLE,MAAAA,aAAa,EAAED;AADV,KADF;AAILY,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMvB,iBAAiB,EAAtC;AACA,QAAMwB,KAAK,GAAGD,MAAM,CAACE,GAAP,CAAYhB,KAAD,KAAY;AACnCW,IAAAA,MAAM,EAAE;AACND,MAAAA,OAAO,EAAEV,KAAK,CAACO;AADT;AAD2B,GAAZ,CAAX,CAAd;AAKA,SAAO;AACLQ,IAAAA,KAAK,EAAEA,KADF;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,eAAenB,eAAf","sourcesContent":["import Head from \"next/head\";\nimport { Fragment } from \"react\";\n// import { useRouter } from \"next/router\";\n\n// import { getEventById } from \"../../dummy-data\";\nimport { getFeaturedEvents, getEventById } from \"../../helpers/api-utils\";\nimport EventSummary from \"../../components/event-detail/event-summary\";\nimport EventLogistics from \"../../components/event-detail/event-logistics\";\nimport EventContent from \"../../components/event-detail/event-content\";\nimport ErrorAlert from \"../../components/ui/error-alert\";\n\nimport Comments from \"../../components/input/comments\";\n\nfunction EventDetailPage(props) {\n  // const router = useRouter();\n  // const eventId = router.query.eventId;\n  // const event = getEventById(eventId);\n  const event = props.selectedEvent;\n\n  if (!event) {\n    return (\n      <ErrorAlert>\n        <p>No event found!</p>\n      </ErrorAlert>\n    );\n  }\n\n  return (\n    <Fragment>\n      <Head>\n        <title>{event.title}</title>\n        <meta name=\"description\" content={event.description} />\n      </Head>\n      <EventSummary title={event.title} />\n      <EventLogistics\n        date={event.date}\n        address={event.location}\n        image={event.image}\n        imageAlt={event.title}\n      />\n      <EventContent>\n        <p>{event.description}</p>\n      </EventContent>\n      <Comments eventId={event.id} />\n    </Fragment>\n  );\n}\n\nexport async function getStaticProps(context) {\n  const eventId = context.params.eventId;\n  const event = await getEventById(eventId);\n  return {\n    props: {\n      selectedEvent: event,\n    },\n    revalidate: 30,\n  };\n}\n\nexport async function getStaticPaths() {\n  const events = await getFeaturedEvents();\n  const paths = events.map((event) => ({\n    params: {\n      eventId: event.id,\n    },\n  }));\n  return {\n    paths: paths,\n    fallback: true,\n  };\n}\n\nexport default EventDetailPage;\n"]},"metadata":{},"sourceType":"module"}